!function (e, t, n) {
    function r(e) {
        var t = {}, r = /^jQuery\d+$/;
        return n.each(e.attributes, function (e, n) {
            n.specified && !r.test(n.name) && (t[n.name] = n.value)
        }), t
    }

    function i(e, t) {
        var r = this, i = n(r);
        if (r.value == i.attr("placeholder") && i.hasClass("placeholder"))if (i.data("placeholder-password")) {
            if (i = i.hide().next().show().attr("id", i.removeAttr("id").data("placeholder-id")), e === !0)return i[0].value = t;
            i.focus()
        } else r.value = "", i.removeClass("placeholder"), r == o() && r.select()
    }

    function s() {
        var e, t = this, s = n(t), o = this.id;
        if ("" == t.value) {
            if ("password" == t.type) {
                if (!s.data("placeholder-textinput")) {
                    try {
                        e = s.clone().attr({type: "text"})
                    } catch (u) {
                        e = n("<input>").attr(n.extend(r(this), {type: "text"}))
                    }
                    e.removeAttr("name").data({
                        "placeholder-password": s,
                        "placeholder-id": o
                    }).bind("focus.placeholder", i), s.data({"placeholder-textinput": e, "placeholder-id": o}).before(e)
                }
                s = s.removeAttr("id").hide().prev().attr("id", o).show()
            }
            s.addClass("placeholder"), s[0].value = s.attr("placeholder")
        } else s.removeClass("placeholder")
    }

    function o() {
        try {
            return t.activeElement
        } catch (e) {
        }
    }

    var u, a, f = "[object OperaMini]" == Object.prototype.toString.call(e.operamini), l = "placeholder"in t.createElement("input") && !f, c = "placeholder"in t.createElement("textarea") && !f, h = n.fn, p = n.valHooks, d = n.propHooks;
    l && c ? (a = h.placeholder = function () {
        return this
    }, a.input = a.textarea = !0) : (a = h.placeholder = function () {
        var e = this;
        return e.filter((l ? "textarea" : ":input") + "[placeholder]").not(".placeholder").bind({
            "focus.placeholder": i,
            "blur.placeholder": s
        }).data("placeholder-enabled", !0).trigger("blur.placeholder"), e
    }, a.input = l, a.textarea = c, u = {
        get: function (e) {
            var t = n(e), r = t.data("placeholder-password");
            return r ? r[0].value : t.data("placeholder-enabled") && t.hasClass("placeholder") ? "" : e.value
        }, set: function (e, t) {
            var r = n(e), u = r.data("placeholder-password");
            return u ? u[0].value = t : r.data("placeholder-enabled") ? ("" == t ? (e.value = t, e != o() && s.call(e)) : r.hasClass("placeholder") ? i.call(e, !0, t) || (e.value = t) : e.value = t, r) : e.value = t
        }
    }, l || (p.input = u, d.value = u), c || (p.textarea = u, d.value = u), n(function () {
        n(t).delegate("form", "submit.placeholder", function () {
            var e = n(".placeholder", this).each(i);
            setTimeout(function () {
                e.each(s)
            }, 10)
        })
    }), n(e).bind("beforeunload.placeholder", function () {
        n(".placeholder").each(function () {
            this.value = ""
        })
    }))
}(this, document, jQuery)
